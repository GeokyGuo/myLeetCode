对动态规划有了一点点认识，

https://leetcode-cn.com/problems/maximum-subarray/solution/dong-tai-gui-hua-fen-zhi-fa-python-dai-ma-java-dai/

思考状态与状态转移方程
本题中状态 是以i结尾的 往前连续的最大和，
所以转移方程就是  d[i] = max(d[i-1]+nums[i],nums[i]);

然后自己想了想，怎么统计最大连续时的  始末下标，

当remax 更新时那么 last一定可以更新
所以重点思考pre这个开始下标什么时候开始更新， 当d[i]准备改弦易帜 的时候，说明前边d[i-1]（以i-1结尾的连续最大已经成为负数），
新的最大值remax必然不可能从[0到i-1] 这个区间的某一值个开始，

负正组合  改线易帜：如果（如果很重要）存在新的最大值，最大值区间的开始必然从当前正数开始统计
            不改： 即负数存在的作用很小，最大值区间的开始并不改变
（有人会说负的中也有正的数，为啥不从某个正数开始，如果有正数，那么在那个正数的时候已经做好了统计，是一个递归的思想，
  比如-10，+5，+5，前两个虽然是负，但是对程序来说，走到第三个5的时候应该是正正组合了，而不是负正组合）

负负组合   改线易帜：如果（如果很重要）存在新的最大值，最大值区间的起始一定从当前负数统计

正负组合   必然不会改线易帜，不会改变 旧的最大值的起始，也不会改变旧的最大值的末尾


结论就是，新的最大值的区间开始，是从改弦易帜后，可以成为临时最大值的数当做下标，如果改弦后不能成为最大值的，那么还沿用旧的最大值的开始
